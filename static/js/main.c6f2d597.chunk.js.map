{"version":3,"sources":["panels/Home.js","panels/AddNewQR.js","panels/AddNewQRSuccess.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","fetchedUserPhone","useState","activePanel","contextOpened","mode","activeTab1","activeTab2","activeTab3","activeTab4","activeTab5","Panel","PanelHeader","Group","Cell","before","photo_200","Avatar","src","description","phone_number","first_name","last_name","Banner","size","header","subheader","background","style","backgroundColor","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","Header","List","Div","Button","stretched","onClick","data-to","AddNewQR","left","PanelHeaderBack","Placeholder","icon","action","bridge","send","Separator","AddNewQRSuccess","Persik","props","qrData","code_data","className","persik","alt","App","setActivePanel","setUser","setUserPhone","setQrData","ScreenSpinner","popout","setPopout","useEffect","a","user","phone","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","View","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c6f2d597.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport bridge from '@vkontakte/vk-bridge';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport Banner from '@vkontakte/vkui/dist/components/Banner/Banner';\nimport { Icon28CameraOutline, Icon16Dropdown, Icon20Add, Icon28UserOutline, Icon28SettingsOutline, Icon28PrivacyOutline, Icon12Verified } from '@vkontakte/icons';\n\n\nconst Home = ({ id, go, fetchedUser, fetchedUserPhone }) => {\n\tconst [state, setState] = useState({\n\t\tactivePanel: 'panel1',\n\t\tcontextOpened: false,\n\t\tmode: 'all',\n\t\tactiveTab1: 'recomendations',\n\t\tactiveTab2: 'music',\n\t\tactiveTab3: 'news',\n\t\tactiveTab4: 'all',\n\t\tactiveTab5: 'all',\n\t});\n\n\n\t// this.select = this.select.bind(this);\n\n\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<PanelHeader>Золотая Лилия</PanelHeader>\n\n\t\t\t{\n\t\t\t\tfetchedUser &&\n\t\t\t\t<Group>\n\t\t\t\t\t<Cell\n\t\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200} /> : null}\n\t\t\t\t\t\tdescription={fetchedUserPhone && fetchedUserPhone.phone_number ? fetchedUserPhone.phone_number : 'Не определен'}\n\t\t\t\t\t>\n\t\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t\t</Cell>\n\t\t\t\t</Group>\n\t\t\t}\n\n\t\t\t<Group>\n\t\t\t\t<Banner\n\t\t\t\t\tmode=\"image\"\n\t\t\t\t\tsize=\"m\"\n\t\t\t\t\theader=\"Вы накопили: 500 рублей\"\n\t\t\t\t\tsubheader={<span>Добавляйте чеки и выигрывайте призы</span>}\n\t\t\t\t\tbackground={\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: '#5b9be6',\n\t\t\t\t\t\t\t\tbackgroundImage: 'url(https://sun9-31.userapi.com/PQ4UCzqE_jue9hAINefBMorYCdfGXvcuV5nSjA/eYugcFYzdW8.jpg)',\n\t\t\t\t\t\t\t\tbackgroundPosition: 'right bottom',\n\t\t\t\t\t\t\t\tbackgroundSize: '102%',\n\t\t\t\t\t\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Group>\n\n\t\t\t<Group header={<Header mode=\"secondary\">Добавленные чеки</Header>}>\n\t\t\t\t<List>\n\t\t\t\t\t<Cell before={<Icon12Verified />} description=\"Добавлен: 03 Марта 2021\">Чек №: 6007cc35a92dc - <strong>300 руб</strong></Cell>\n\t\t\t\t\t<Cell before={<Icon12Verified />} description=\"Добавлен: 02 Марта 2021\">Чек №: 8907aa75a92db - <strong>100 руб</strong></Cell>\n\t\t\t\t\t<Cell before={<Icon12Verified />} description=\"Добавлен: 01 Марта 2021\">Чек №: 8937kl34a83dc - <strong>100 руб</strong></Cell>\n\t\t\t\t</List>\n\t\t\t</Group>\n\n\t\t\t<Group>\n\t\t\t\t<Div>\n\t\t\t\t\t<Button stretched size=\"l\" before={<Icon20Add />} onClick={go} data-to=\"add-new-qr\">\n\t\t\t\t\t\tДобавить новый чек\n\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Group>\n\t\t</Panel >\n\t);\n}\n\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\n\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport CellButton from '@vkontakte/vkui/dist/components/CellButton/CellButton';\nimport Placeholder from '@vkontakte/vkui/dist/components/Placeholder/Placeholder';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Icon28CameraOutline, Icon56UsersOutline, Icon56MentionOutline, Icon56AddCircleOutline } from '@vkontakte/icons';\n\nconst AddNewQR = ({ id, go, fetchedUser }) => (\n    <Panel id={id}>\n        <PanelHeader\n            left={<PanelHeaderBack onClick={go} data-to=\"home\" />}\n        >\n            Добавление чека\n\t\t</PanelHeader>\n        <Group>\n            <Placeholder\n                icon={<Icon56AddCircleOutline />}\n                header=\"Добавить новый чек\"\n                action={<Button size=\"l\" before={<Icon28CameraOutline />} onClick={() => {\n                    bridge.send('VKWebAppOpenCodeReader')\n                }}>Сканировать QR</Button>}\n            >\n                Добавляйте больше чеков и выигрывайте призы!\n              </Placeholder>\n            <Separator />\n        </Group>\n    </Panel>);\n\nAddNewQR.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default AddNewQR;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\n\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport CellButton from '@vkontakte/vkui/dist/components/CellButton/CellButton';\nimport Placeholder from '@vkontakte/vkui/dist/components/Placeholder/Placeholder';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Icon28CameraOutline, Icon56UsersOutline, Icon56MentionOutline, Icon56CheckCircleOutline } from '@vkontakte/icons';\n\nconst AddNewQRSuccess = ({ id, go }) => (\n    <Panel id={id}>\n        <PanelHeader>\n            Добавление чека\n\t\t</PanelHeader>\n        <Group>\n            <Placeholder\n                icon={<Icon56CheckCircleOutline />}\n                header=\"Ваш чек Успешно добавлен\"\n                action={<Button size=\"l\" onClick={go} data-to=\"home\">Продолжить</Button>}\n            >\n                Добавляйте больше чеков и выигрывайте призы!\n              </Placeholder>\n            <Separator />\n        </Group>\n    </Panel>);\n\nAddNewQRSuccess.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default AddNewQRSuccess;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderBack from '@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\n\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\" />}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<Cell>{props.qrData ? props.qrData.code_data : null}</Cell>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\" />\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport AddNewQR from './panels/AddNewQR';\nimport AddNewQRSuccess from './panels/AddNewQRSuccess';\n\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [fetchedUserPhone, setUserPhone] = useState(null);\n\tconst [qrData, setQrData] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\n\t\t\tif (type === 'VKWebAppOpenCodeReaderResult') {\n\t\t\t\tsetQrData(data);\n\t\t\t\tsetActivePanel('add-new-qr-success');\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst phone = await bridge.send(\"VKWebAppGetPhoneNumber\");\n\n\t\t\tsetUser(user);\n\t\t\tsetUserPhone(phone);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} fetchedUserPhone={fetchedUserPhone} go={go} />\n\t\t\t\t\t<Persik id='persik' qrData={qrData} go={go} />\n\t\t\t\t\t<AddNewQR fetchedUser={fetchedUser} id='add-new-qr' go={go} />\n\t\t\t\t\t<AddNewQRSuccess id='add-new-qr-success' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}